setwd("C:/MyGitRepos/cherry-blossom-run/Data")
findColLocs <- function(spacerRow) {
spaceLocs <- gregexpr(" ", spacerRow)[[1]]
rowLength <- nchar(spacerRow)
if (substring(spacerRow, rowLength, rowLength) != " ") {
return (c(0, spaceLocs, rowLength + 1))
} else {
return (c(0, spaceLocs))
}
}
selectCols <- function(colNames, headerRow, searchLocs) {
sapply(colNames,
function(name, headerRow, searchLocs) {
startPos <- regexpr(name, headerRow)[[1]]
if (startPos == -1) {
return(c(NA, NA))
}
index <- sum(startPos >= searchLocs)
c(searchLocs[index] + 1, searchLocs[index + 1])
},
headerRow = headerRow, searchLocs = searchLocs)
}
extractVariables <- function(file, varNames = c("name", "home", "ag", "gun", "net", "time"),
sex, year) {
#Find the index of the row with equal signs
eqIndex <- grep("^===", file)
#Find the index of the footer row
footIndex <- grep("^[[:blank:]]*[#|*]", file)
#Find the index of rows that are completely blank
blankIndex <- grep("^[[:blank:]]*$", file)
#Extract the two key rows and the data (fix men 2006 spacer row)
spacerRow <- file[eqIndex]
if (sex == "M" & year == 2006){
locNetTime <- regexpr("net", headerRow)
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), " ")
}
headerRow <- tolower(file[eqIndex - 1])
body <- file[-c(1:eqIndex, footIndex, blankIndex)]
#Obtain the starting and ending positions of variables
searchLocs <- findColLocs(spacerRow)
locCols <- selectCols(varNames, headerRow, searchLocs)
Values <- mapply(substr, list(body), start = locCols[1,], stop = locCols[2,])
colnames(Values) <- varNames
invisible(Values)
}
wfilenames <- paste("WomenTxt/", 1999:2012, ".txt", sep="")
womenFiles <- lapply(wfilenames, readLines)
names(womenFiles) <- 1999:2012
womenResMat <- mapply(extractVariables, womenFiles, sex = "W", year = 1999:2012)
options(error = recover)
womenResMat <- mapply(extractVariables, womenFiles, sex = "W", year = 1999:2012)
ls()
eqIndex
sex
year
womenResMat <- mapply(extractVariables, womenFiles, sex = "W", year = 1999:2012)
?options
options(error = NULL)
womenResMat <- mapply(extractVariables, womenFiles, sex = "W", year = 1999:2012)
file<- readLines("WomenTxt/2001.txt")
file
varNames = c("name", "home", "ag", "gun", "net", "time")
sex = "W"
year = 2001
eqIndex <- grep("^===", file)
eqIndex
footIndex <- grep("^[[:blank:]]*[#|*]", file)
footIndex
blankIndex <- grep("^[[:blank:]]*$", file)
blankIndex
spacerRow <- file[eqIndex]
spacerRow
headerRow <- tolower(file[eqIndex - 1])
headerRow
body <- file[-c(1:eqIndex, footIndex, blankIndex)]
findColLocs("===== ========  ========== =======")
file<- readLines("WomenTxt/2002.txt")
year = 2002
eqIndex <- grep("^===", file)
eqIndex
footIndex <- grep("^[[:blank:]]*[#|*]", file)
footIndex
blankIndex <- grep("^[[:blank:]]*$", file)
blankIndex
spacerRow <- file[eqIndex]
spacerRow
headerRow <- tolower(file[eqIndex - 1])
headerRow
body <- file[-c(1:eqIndex, footIndex, blankIndex)]
body
searchLocs <- findColLocs(spacerRow)
searchLocs
locCols <- selectCols(varNames, headerRow, searchLocs)
locCols
class(locCols)
c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA)
matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
?matrix
testMat<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
names(testMat)
varNames
names(testMat)<-varNames
testMat
testMat<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
testMat<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2, colnames = varNames)
testMat<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
colnames(testMat) <- varNames
testMat
file[1:50]
file<- readLines("WomenTxt/2001.txt")
year<-2001
footIndex <- grep("^[[:blank:]]*[#|*]", file)
footIndex
blankIndex <- grep("^[[:blank:]]*$", file)
blankIndex
body <- file[-c(footIndex, blankIndex)]
body
body[1:20]
locCols<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
locCols
colnames(locCols) <- varNames
locCols
Values <- mapply(substr, list(body), start = locCols[1,], stop = locCols[2,])
Values
head(Values)
colnames(Values) <- varNames
head(Values)
extractVariables <- function(file, varNames = c("name", "home", "ag", "gun", "net", "time"),
sex, year) {
#Find the index of the footer row
footIndex <- grep("^[[:blank:]]*[#|*]", file)
#Find the index of rows that are completely blank
blankIndex <- grep("^[[:blank:]]*$", file)
if(sex == "W" & year == 2001){
#women's file for 2001 does not contain spacer or header rows
body <- file[-c(footIndex, blankIndex)]
locCols<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
colnames(locCols) <- varNames
} else {
#Find the index of the row with equal signs
eqIndex <- grep("^===", file)
#Extract the two key rows and the data (fix men 2006 spacer row)
spacerRow <- file[eqIndex]
if (sex == "M" & year == 2006){
locNetTime <- regexpr("net", headerRow)
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), " ")
}
headerRow <- tolower(file[eqIndex - 1])
body <- file[-c(1:eqIndex, footIndex, blankIndex)]
#Obtain the starting and ending positions of variables
searchLocs <- findColLocs(spacerRow)
locCols <- selectCols(varNames, headerRow, searchLocs)
}
Values <- mapply(substr, list(body), start = locCols[1,], stop = locCols[2,])
colnames(Values) <- varNames
invisible(Values)
}
wfilenames <- paste("WomenTxt/", 1999:2012, ".txt", sep="")
womenFiles <- lapply(wfilenames, readLines)
names(womenFiles) <- 1999:2012
womenResMat <- mapply(extractVariables, womenFiles, sex = "W", year = 1999:2012)
sapply(womenResMat, nrow)
age <- as.numeric(womenResMat$`2012`[, "ag"])
age
age <- sapply(womenResMat, function(x) as.numeric(x[ , "ag"]))
age
boxplot(age, ylab = "Age", xlab = "Year")
age[1]
class(age[1])
class(age[[1]])
age1999<-age[[1]]
age$`1999`
sum(is.na(age$`1999`))
sapply(age, function(x) sum(is.na(x)))
age1999 <- age$`1999`
grep("^===", womenFiles[["1999"]])
badAgeIndex <- which(is.na(age1999)) + 3
badAgeIndex
womenFiles$`1999`[1:25]
load("C:/MyGitRepos/cherry-blossom-run/Data/cbMen.rda")
View(cbMen)
womenFiles$`1999`[badAgeIndex]
age2002 <- age$`2002`
badAgeIndex <- which(is.na(age2002)) + grep("^===", womenFiles[["2002"]])
badAgeIndex
womenFiles$`2002`[badAgeIndex]
age2005 <- age$`2005`
badAgeIndex <- which(is.na(age2005)) + grep("^===", womenFiles[["2005"]])
womenFiles$`2005`[badAgeIndex]
age2001 <- age$`2001`
age2001
min(age2001)
which(age2001 == 0)
zeroAgeIndex <- (which(age2001 == 0) + grep("^===", womenFiles[["2001"]]))
zeroAgeIndex
grep("^===", womenFiles[["2001"]])
womenFiles$`2001`[zeroAgeIndex]
zeroAgeIndex
zeroAgeIndex <- which(age2001 == 0)
zeroAgeIndex
womenFiles$`2001`[zeroAgeIndex]
womenFiles$`2001`[zeroAgeIndex + 3]
age2009 <- age$`2009`
min(age2009)
age2009
?min
min(age2009, na.rm = T)
which(age2009 == 7)
grep("^===", womenFiles[["2009"]])
ageSevenIndex <- which(age2009 == 7) + grep("^===", womenFiles[["2009"]])
womenFiles$`2009`[ageSevenIndex]
convertTime <- function(charTime){
#takes time in h:mm:ss format and converts it to minutes
timePieces <- strsplit(charTime, ":")
timePieces <- sapply(timePieces, as.numeric)
runTime <- sapply(timePieces,
function(x){
if (length(x) == 2) {x[1] + x[2]/60}
else {60*x[1] + x[2] + x[3]/60}
})
}
createDF <- function(Res, year, sex){
#Determine which time to use
useTime <- if(!is.na(Res[1, "net"])) {
Res[, "net"]
} else if(!is.na(Res[1, "gun"])) {
Res[, "gun"]
} else {
Res[, "time"]}
#Remove # and * and blanks from time
useTime <- gsub("[#\\*[:blank:]]", "", useTime)
#Drop rows with no time
Res <- Res[useTime != "", ]
runTime <- convertTime(useTime[useTime != ""])
Results <- data.frame(year = rep(year, nrow(Res)),
sex = rep(sex, nrow(Res)),
name = Res[ , "name"],
home = Res[ , "home"],
age = as.numeric(Res[ , "ag"]),
runTime = runTime,
stringsAsFactors = F)
invisible(Results)
}
womenDF <- mapply(createDF, womenResMat, year = 1999:2012, sex = "W", SIMPLIFY = F)
warnings()
sapply(womenDF, function(x) sum(is.na(x$runTime)))
fileWomen2006 <- womenFiles$`2006`
head(fileWomen2006)
head(fileWomen2006, 30)
file <- womenFiles$`2006`
varNames = c("name", "home", "ag", "gun", "net", "time")
sex
year
year <- 2006
footIndex <- grep("^[[:blank:]]*[#|*]", file)
footIndex
blankIndex <- grep("^[[:blank:]]*$", file)
blankIndex
eqIndex <- grep("^===", file)
eqIndex
spacerRow <- file[eqIndex]
locNetTime <- regexpr("net", headerRow)
locNetTime
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), " ")
spacerRow
paste(substr(spacerRow, 1, locNetTime - 2)
exit
substr(spacerRow, 1, locNetTime - 2)
locNetTime - 2
headerRow
headerRow <- tolower(file[eqIndex - 1])
headerRow
locNetTime <- regexpr("net", headerRow)
locNetTime
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), " ")
spacerRow
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), "")
spacerRow
substr(spacerRow, 1, locNetTime - 2)
spacerRow <- file[eqIndex]
spacerRow
locNetTime <- regexpr("net", headerRow)
locNetTime
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), "")
spacerRow
extractVariables <- function(file, varNames = c("name", "home", "ag", "gun", "net", "time"),
sex, year) {
#Find the index of the footer row
footIndex <- grep("^[[:blank:]]*[#|*]", file)
#Find the index of rows that are completely blank
blankIndex <- grep("^[[:blank:]]*$", file)
if(sex == "W" & year == 2001){
#women's file for 2001 does not contain spacer or header rows
body <- file[-c(footIndex, blankIndex)]
locCols<-matrix(c(13, 34, 38, 56, 35, 37, 65, 72, 57, 64, NA, NA), nrow = 2)
colnames(locCols) <- varNames
} else {
#Find the index of the row with equal signs
eqIndex <- grep("^===", file)
#Extract the two key rows and the data (fix men 2006 spacer row)
spacerRow <- file[eqIndex]
headerRow <- tolower(file[eqIndex - 1])
if (year == 2006){
locNetTime <- regexpr("net", headerRow)
spacerRow <- paste(substr(spacerRow, 1, locNetTime - 2),
substr(spacerRow, locNetTime, nchar(spacerRow)), "")
}
body <- file[-c(1:eqIndex, footIndex, blankIndex)]
#Obtain the starting and ending positions of variables
searchLocs <- findColLocs(spacerRow)
locCols <- selectCols(varNames, headerRow, searchLocs)
}
Values <- mapply(substr, list(body), start = locCols[1,], stop = locCols[2,])
colnames(Values) <- varNames
invisible(Values)
}
womenResMat <- mapply(extractVariables, womenFiles, sex = "W", year = 1999:2012)
womenDF <- mapply(createDF, womenResMat, year = 1999:2012, sex = "W", SIMPLIFY = F)
sapply(womenDF, function(x) sum(is.na(x$runTime)))
cbWomen <- do.call(rbind, womenDF)
save(cbWomen, file = "cbWomen.rda")
View(cbWomen)
